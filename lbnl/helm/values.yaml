postgresql:
  enabled: true
  primary:
    initdb:
      # This Secret name is not automatically release-scoped.
      # You must set unique values per release if installing multiple
      # releases per namespace.
      scriptsSecret: ochami-pg-setup
  image:
    tag: 16.4.0
  service:
    ports:
      postgresql: "5432"

smd:
  deployment:
    replicaCount: 1
    image:
      repository: ghcr.io/openchami
      name: smd
      tag: "v2.14.2"
      pullPolicy: IfNotPresent
    containerPort: 27779
  dbname: hmsds

  service:
    type: ClusterIP
    port: 27779
    annotations:

bss:
  deployment:
    replicaCount: 1
    image:
      repository: ghcr.io/openchami
      name: bss
      pullPolicy: IfNotPresent
      tag: "v1.29.1"
    containerPort: 27778
  dbname: bssdb

  service:
    type: ClusterIP
    port: 27778
    annotations:

# Parameters specific to deploying into Google Kubernetes Engine
gke:
  gateway:
    class: gke-l7-global-external-managed
    port: 80
  securityPolicy: lbnl-nersc

tftpd:
  deployment:
    replicaCount: 1
    image:
      repository: ghcr.io/openchami
      name: tftpd
      pullPolicy: IfNotPresent
      tag: "0.1"
    containerPort: 69

  service:
    type: LoadBalancer
    port: 69
    # Since GKE external network LoadBalancers are not proxied, it might be a
    # good idea to add an annotation like loadBalancerSourceRanges to limit who
    # can access the Service.
    annotations:

dnsmasq:
  deployment:
    replicaCount: 1
    image:
      repository: ghcr.io/openchami
      name: dnsmasq
      pullPolicy: IfNotPresent
      tag: dynamic
    dhcp_port: 67
    tftp_port: 69

  service:
    dhcp:
      type: LoadBalancer
      port: 67
      # Since GKE external network LoadBalancers are not proxied, it might be a
      # good idea to add an annotation like loadBalancerSourceRanges to limit who
      # can access the Service.
      annotations:

    tftp:
      type: LoadBalancer
      port: 69
      # Since GKE external network LoadBalancers are not proxied, it might be a
      # good idea to add an annotation like loadBalancerSourceRanges to limit who
      # can access the Service.
      annotations:

hydra:
  deployment:
    replicaCount: 1
    image:
      repository: docker.io/oryd
      name: hydra
      pullPolicy: IfNotPresent
      tag: "v2.2.0"
    containerPorts:
      public: 4444
      admin: 4445
      tokenuser: 5555

  service:
    type: ClusterIP
    ports:
      public: 4444
      admin: 4445
      tokenuser: 5555
    annotations:

hydra_consent:
  deployment:
    image:
      repository: docker.io/oryd
      name: hydra-login-consent-node
      pullPolicy: IfNotPresent
      tag: "v2.2.0"
    containerPorts:
      consent: 3000

  service:
    type: ClusterIP
    ports:
      consent: 3000
    annotations:

swiss_army_knife:
  deployment:
    replicaCount: 1
    image:
      repository: docker.io/leodotcloud
      name: swiss-army-knife
      pullPolicy: IfNotPresent
      tag: latest
