postgresql:
  enabled: true
  primary:
    initdb:
      # This Secret name is not automatically release-scoped.
      # You must set unique values per release if installing multiple
      # releases per namespace.
      scriptsSecret: ochami-pg-setup
  image:
    tag: 16.4.0
  service:
    ports:
      postgresql: "5432"

smd:
  deployment:
    replicaCount: 1
    image:
      repository: ghcr.io/openchami
      name: smd
      tag: "v2.17.7"
      pullPolicy: IfNotPresent
    containerPort: 27779
  dbname: hmsds

  service:
    type: ClusterIP
    port: 27779
    annotations:

bss:
  deployment:
    replicaCount: 1
    image:
      repository: ghcr.io/openchami
      name: bss
      pullPolicy: IfNotPresent
      tag: "v1.32.0"
    containerPort: 27778
  dbname: bssdb

  service:
    type: ClusterIP
    port: 27778
    annotations:

# Parameters specific to deploying into Google Kubernetes Engine
gke:
  gateway:
    class: gke-l7-global-external-managed
    port: 80
  securityPolicy: lbnl-nersc

coredhcp:
  deployment:
    replicaCount: 1
    image:
      repository: ghcr.io/openchami
      name: coredhcp
      pullPolicy: IfNotPresent
      tag: v0.3.0

  service:
    tftp:
      port: 69
    dhcp:
      port: 67
    type: LoadBalancer
    annotations:

  # provide a ConfigMap containing static lease configuration for the CoreDHCP file plugin.
  # the plugin is disabled if the name is empty.
  leaseMap:
    name: ""
    key: "file_leases.txt"
  # TODO there are a couple options for handling config. we could be very prescriptive
  # and build a configuration file from specific enumerated values only (the current approach), or
  # just treat the contents under coredhcp.config as a complete config and toYaml them to produce
  # a ConfigMap. We could offer a bring your own ConfigMap alternative with either approach. IDK
  # if we'd expect users to often need settings outside the chosen exposed settings with the
  # prescriptive approach.
  config:
    # with the exception of dns, you _must_ set values appropriate to your network
    # in this section. the default values are only examples.
    #
    # server_id is the address external nodes will use to talk to your DHCP server.
    # this value will also be used to set the service's LoadBalancer IP.
    server_id: 192.168.0.254
    dns:
      - 1.1.1.1
      - 1.0.0.1
    # router is the default gateway for your node network.
    router: 172.16.0.254
    # netmask defines the range of addresses the DHCP server will allocate.
    netmask: 255.255.255.0
    range:
      start: 172.16.0.10
      end: 172.16.0.200
      duration: 60s
    unrecognized_range:
      start: 172.16.0.201
      end: 172.16.0.220
      duration: 60s

hydra:
  deployment:
    replicaCount: 1
    image:
      repository: docker.io/oryd
      name: hydra
      pullPolicy: IfNotPresent
      tag: "v2.2.0"
    containerPorts:
      public: 4444
      admin: 4445
      tokenuser: 5555

  service:
    type: ClusterIP
    ports:
      public: 4444
      admin: 4445
      tokenuser: 5555
    annotations:

hydra_consent:
  deployment:
    image:
      repository: docker.io/oryd
      name: hydra-login-consent-node
      pullPolicy: IfNotPresent
      tag: "v2.2.0"
    containerPorts:
      consent: 3000

  service:
    type: ClusterIP
    ports:
      consent: 3000
    annotations:

swiss_army_knife:
  deployment:
    replicaCount: 1
    image:
      repository: docker.io/leodotcloud
      name: swiss-army-knife
      pullPolicy: IfNotPresent
      tag: latest
