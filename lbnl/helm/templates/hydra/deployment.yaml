---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hydra
  namespace: {{ .Release.Namespace }}
  labels:
    app: hydra
spec:
  replicas: {{ .Values.hydra.deployment.replicaCount }}
  selector:
    matchLabels:
      app: hydra
  template:
    metadata:
      labels:
        app: hydra
    spec:
      containers:
      - name: hydra
        image: {{ .Values.hydra.deployment.image.repository }}/{{ .Values.hydra.deployment.image.name }}:{{ .Values.hydra.deployment.image.tag }}
        imagePullPolicy: {{ .Values.hydra.deployment.image.pullPolicy }}
        command: ["hydra"]
        args: ["serve", "-c", "/etc/config/hydra/hydra.yml", "all", "--dev"]
        ports:
        - name: public
          containerPort: {{ .Values.hydra.deployment.containerPorts.public }}
          protocol: TCP
        - name: admin
          containerPort: {{ .Values.hydra.deployment.containerPorts.admin }}
          protocol: TCP
        - name: tokenuser
          containerPort: {{ .Values.hydra.deployment.containerPorts.tokenuser }}
          protocol: TCP
        volumeMounts:
        - name: hydra-config
          mountPath: /etc/config/hydra
          readOnly: true
        env:
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-pg-hydra
              key: password
        - name: PG_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-pg-hydra
              key: username
        - name: PG_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-pg-hydra
              key: database
        - name: PG_PORT
          value: "{{ .Values.postgresql.service.ports.postgresql }}"
        - name: DSN
          value: postgres://$(PG_USERNAME):$(PG_PASSWORD)@{{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local:$(PG_PORT)/$(PG_DB)?sslmode=disable&max_conns=20&max_idle_conns=4
      volumes:
      - name: hydra-config
        configMap:
          name: hydra-config
