---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lighttpd
  namespace: {{ .Release.Namespace }}
  labels:
    app: lighttpd
spec:
  replicas: {{ .Values.lighttpd.deployment.replicaCount }}
  selector:
    matchLabels:
      app: lighttpd
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: lighttpd
    spec:
      containers:
        - name: lighttpd
          image: {{ .Values.lighttpd.deployment.image.repository }}/{{ .Values.lighttpd.deployment.image.name }}:{{ .Values.lighttpd.deployment.image.tag }}
          imagePullPolicy: {{ .Values.lighttpd.deployment.image.pullPolicy }}
          command: ["/bin/bash"]
          args: ["-c", "service lighttpd start; while true; do sleep 3600; done"]
          ports:
            - name: lighttpd
              containerPort: {{ .Values.lighttpd.deployment.containerPort }}
              protocol: TCP
          volumeMounts:
            - mountPath: {{ .Values.lighttpd.mount_path}}
              name: {{ .Values.lighttpd.pvc_name }}
            - name: lighttpd-config
              mountPath: /etc/lighttpd
              readOnly: true
          readinessProbe:
            exec:
              command: ["service", "lighttpd", "status", "|", "grep", "-q", "\"lighttpd is running\""]
      volumes:
        - name: {{ .Values.lighttpd.pvc_name }}
          persistentVolumeClaim:
            claimName: {{ .Values.lighttpd.pvc_name }}
        - name: lighttpd-config
          configMap:
            name: lighttpd-config
