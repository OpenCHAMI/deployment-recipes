---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bss
  namespace: {{ .Release.Namespace }}
  labels:
    app: bss
spec:
  replicas: {{ .Values.bss.deployment.replicaCount }}
  selector:
    matchLabels:
      app: bss
  template:
    metadata:
      labels:
        app: bss
    spec:
      containers:
        - name: bss
          image: {{ .Values.bss.deployment.image.repository }}/{{ .Values.bss.deployment.image.name }}:{{ .Values.bss.deployment.image.tag }}
          imagePullPolicy: {{ .Values.bss.deployment.image.pullPolicy }}
          ports:
            - name: bss
              containerPort: {{ .Values.bss.deployment.containerPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /boot/v1/service/status
              port: {{ .Values.bss.deployment.containerPort }}
          env:
            - name: BSS_USESQL
              value: "true"
            - name: BSS_INSECURE
              value: "true"
            - name: BSS_DBHOST
              value: {{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local
            - name: BSS_DBPORT
              value: "{{ .Values.postgresql.service.ports.postgresql }}"
            - name: BSS_DBUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pg-bss
                  key: username
            - name: BSS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pg-bss
                  key: password
            - name: BSS_DBNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pg-bss
                  key: database
