volumes:
  haproxy-certs:
  acme-certs:


services:
  haproxy:
    container_name: haproxy
    image: cgr.dev/chainguard/haproxy
    ports:
      - "8081:80"
      - "8443:443"
    networks:
      - external
      - internal
      - jwt-internal
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      opaal-idp:
        condition: service_healthy
      opaal:
        condition: service_healthy
      smd:
        condition: service_healthy
      bss:
        condition: service_healthy
    volumes:
      - ./configs/:/usr/local/etc/haproxy/:ro
      - haproxy-certs:/etc/haproxy/certs/:ro
  acme-register:
    container_name: ${SYSTEM_NAME}.${SYSTEM_DOMAIN}
    image: ghcr.io/openchami/acme.sh:v0.2.2
    networks:
      - cert-internal
    depends_on:
      step-ca:
        condition: service_healthy
    volumes:
      - step-root-ca:/root_ca/:ro
      - acme-certs:/root/.acme.sh
    entrypoint: ["/usr/bin/acme.sh", "--server", "https://step-ca:9000/acme/acme/directory", "--ca-bundle", "/root_ca/root_ca.crt", "-d", "${SYSTEM_NAME}.${SYSTEM_DOMAIN}", "--issue", "--standalone", "--force"]
  acme-deploy:
    container_name: acme-deploy
    image: ghcr.io/openchami/acme.sh:v0.2.2
    networks:
      - cert-internal
    depends_on:
      acme-register:
        condition: service_completed_successfully
    volumes:
      - /:/root_ca/:ro
      - acme-certs:/root/.acme.sh
      - haproxy-certs:/root/certs/
    environment:
      - DEPLOY_HAPROXY_PEM_PATH=/root/certs/
    entrypoint: ["/usr/bin/acme.sh", "--server", "https://step-ca:9000/acme/acme/directory", "--ca-bundle", "/root_ca/root_ca.crt", "--deploy", "--deploy-hook", "haproxy", "--domain", "${SYSTEM_NAME}.${SYSTEM_DOMAIN}"]
