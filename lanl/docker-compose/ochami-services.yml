version: '3.7'

## Because hardcoding passwords is bad, we use openssl to generate a random password
## and store it in a .env file.  This file is not checked into git, so it is not
## shared with anyone else.  This is a temporary solution until we can use docker secrets.
## The generate-creds.sh script performs the following commands.
# echo "POSTGRES_PASSWORD=$(openssl rand -base64 32 | openssl dgst | cut -d' ' -f2)" > .env
# echo "SMD_POSTGRES_PASSWORD=$(openssl rand -base64 32 | openssl dgst | cut -d' ' -f2)" >> .env
# echo "BSS_POSTGRES_PASSWORD=$(openssl rand -base64 32 | openssl dgst | cut -d' ' -f2)" >> .env
# echo "HYDRA_POSTGRES_PASSWORD=$(openssl rand -base64 32 | openssl dgst | cut -d' ' -f2)" >> .env


networks:
  internal:
  external:
    external: true

volumes:
  postgres-data:

services:
  postgres: # Postgres
    image: postgres:11.5-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ochami
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Set in .env file for now.
      POSTGRES_MULTIPLE_DATABASES: hmsds:smd-user:${SMD_POSTGRES_PASSWORD},bssdb:bss-user:${BSS_POSTGRES_PASSWORD},hydradb:hydra-user:${HYDRA_POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./pg-init:/docker-entrypoint-initdb.d
    networks:
      - internal
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "--dbname", "ochami", "--username", "ochami"]
      interval: 10s
      timeout: 10s
      retries: 5
###
# SMD Init and Server Containers
###
  # sets up postgres for SMD data
  smd-init:
    image: ghcr.io/openchami/smd:v2.14.2
    container_name: smd-init
    hostname: smd-init
    environment:
      - SMD_DBHOST=postgres
      - SMD_DBPORT=5432
      - SMD_DBNAME=hmsds
      - SMD_DBUSER=smd-user
      - SMD_DBPASS=${SMD_POSTGRES_PASSWORD} # Set in .env file
      - SMD_DBOPTS=sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal
    entrypoint:
      - /smd-init
  # SMD
  smd:
    image: ghcr.io/openchami/smd:v2.14.2
    container_name: smd
    hostname: smd
    environment:
      - SMD_DBHOST=postgres
      - SMD_DBPORT=5432
      - SMD_DBNAME=hmsds
      - SMD_DBUSER=smd-user
      - SMD_DBPASS=${SMD_POSTGRES_PASSWORD} # Set in .env file
      - SMD_DBOPTS=sslmode=disable
      - SMD_JWKS_URL=http://hydra:4444/.well-known/jwks.json
    depends_on:
      postgres:
        condition: service_healthy
      smd-init:
        condition: service_completed_successfully
    ports:
      - "27779:27779"
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:27779/hsm/v2/service/ready"]
      interval: 5s
      retries: 60
      start_period: 20s
      timeout: 10s
    networks:
      - internal
###
# BSS Init and Server Containers
###
# sets up postgres for BSS data
  bss-init:
    image: ghcr.io/openchami/bss:v1.29.0
    container_name: bss-init
    hostname: bss-init
    environment:
      - BSS_USESQL=true
      - BSS_INSECURE=true
      - BSS_DBHOST=postgres
      - BSS_DBPORT=5432
      - BSS_DBNAME=bssdb
      - BSS_DBUSER=bss-user
      - BSS_DBPASS=${BSS_POSTGRES_PASSWORD} # Set in .env file
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal
    entrypoint:
      - /usr/local/bin/bss-init
  # boot-script-service
  bss:
    image: ghcr.io/openchami/bss:v1.29.0
    container_name: bss
    hostname: bss
    environment:
      - BSS_USESQL=true
      - BSS_INSECURE=true
      - BSS_DEBUG=true
      - BSS_DBHOST=postgres
      - BSS_DBPORT=5432
      - BSS_DBNAME=bssdb
      - BSS_DBUSER=bss-user
      - BSS_DBPASS=${BSS_POSTGRES_PASSWORD} # Set in .env file
      - BSS_AUTH_REQUIRED=true
      - BSS_JWKS_URL=http://hydra:4444/.well-known/jwks.json
      - BSS_OAUTH2_ADMIN_BASE_URL=http://hydra:4445
      - BSS_OAUTH2_PUBLIC_BASE_URL=http://hydra:4444
    ports:
      - '27778:27778'
    depends_on:
      postgres:
        condition: service_healthy
      smd:
        condition: service_healthy
      bss-init:
        condition: service_completed_successfully
      hydra:
        condition: service_healthy
    networks:
      - internal
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:27778/boot/v1/service/status"]
      interval: 5s
      timeout: 10s
      retries: 60
  dnsmasq:
    image: ghcr.io/openchami/dnsmasq:dynamic
    container_name: dnsmasq-dhcp
    hostname: dnsmasq-dhcp
    environment:
      - smd_endpoint=172.16.0.253
      - bss_endpoint=172.16.0.253
    depends_on:
      bss:
        condition: service_healthy
      smd:
        condition: service_healthy
    network_mode: "host"
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: pgrep dnsmasq
      interval: 5s
      timeout: 10s
      retries: 60

