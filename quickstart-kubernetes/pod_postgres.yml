apiVersion: v1
kind: Pod
metadata:
  namespace: ochami
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
spec:
  containers:

    - name: postgres
      image: docker.io/postgres:11.5-alpine
      env:
        - name: POSTGRES_USER
          value: ochami
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: POSTGRES_PASSWORD
        - name: SMD_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: SMD_POSTGRES_PASSWORD
        - name: BSS_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: BSS_POSTGRES_PASSWORD
        - name: HYDRA_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secrets
              key: HYDRA_POSTGRES_PASSWORD
        - name: POSTGRES_MULTIPLE_DATABASES
          value: hmsds:smd-user:$(SMD_POSTGRES_PASSWORD),bssdb:bss-user:$(BSS_POSTGRES_PASSWORD),hydradb:hydra-user:$(HYDRA_POSTGRES_PASSWORD)
      volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data/
        - name: pg-init
          mountPath: /docker-entrypoint-initdb.d/multi-psql-db.sh
          subPath: multi-psql-db.sh
      livenessProbe:
        exec:
          command: ["pg_isready", "--username", "$(POSTGRES_USER)"]
        periodSeconds: 10
        timeoutSeconds: 10
        failureThreshold: 5

  volumes:
    - name: postgres-data
      emptyDir:
        sizeLimit: 8000Mi
    - name: pg-init
      configMap:
        name: multi-psql-db-sh
        defaultMode: 0755
